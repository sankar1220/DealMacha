package com.dealmacha.domain;

// Generated 26 May, 2016 10:19:10 AM by Hibernate Tools 4.0.0
import javax.persistence.*;

/**
 * CmsPostsImages generated by hbm2java
 */
@Entity
@Table(name = "cms_posts_images", catalog = "dealmacha_app")
public class CmsPostsImages extends AbstractDomain implements java.io.Serializable {

    private CmsPosts cmsPosts;
    private Integer imageWidth;
    private Integer imageHeight;
    private String imageAlt;
    private String imageLocation;

    public CmsPostsImages() {
    }

    public CmsPostsImages(final String id) {
        this.id = id;
    }

    public CmsPostsImages(final String id, final CmsPosts cmsPosts, final Integer imageWidth, final Integer imageHeight,
            final String imageAlt, final String imageLocation) {
        this.id = id;
        this.cmsPosts = cmsPosts;
        this.imageWidth = imageWidth;
        this.imageHeight = imageHeight;
        this.imageAlt = imageAlt;
        this.imageLocation = imageLocation;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cms_posts_id")
    public CmsPosts getCmsPosts() {
        return cmsPosts;
    }

    @Column(name = "image_alt", length = 45)
    public String getImageAlt() {
        return imageAlt;
    }

    @Column(name = "image_height")
    public Integer getImageHeight() {
        return imageHeight;
    }

    @Column(name = "image_location", length = 200)
    public String getImageLocation() {
        return imageLocation;
    }

    @Column(name = "image_width")
    public Integer getImageWidth() {
        return imageWidth;
    }

    public void setCmsPosts(final CmsPosts cmsPosts) {
        this.cmsPosts = cmsPosts;
    }

    public void setImageAlt(final String imageAlt) {
        this.imageAlt = imageAlt;
    }

    public void setImageHeight(final Integer imageHeight) {
        this.imageHeight = imageHeight;
    }

    public void setImageLocation(final String imageLocation) {
        this.imageLocation = imageLocation;
    }

    public void setImageWidth(final Integer imageWidth) {
        this.imageWidth = imageWidth;
    }

}
